import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import javax.management.RuntimeErrorException;

public class TerstaInsercaoComParametro {

	public static void main(String[] args) throws SQLException {

		// conexão com MYSQL
		ConnectionFactory connectionFactory = new ConnectionFactory();
		Connection connection = connectionFactory.recuperarConexao();
		// assumir o controle
		connection.setAutoCommit(false);

		try (PreparedStatement stm = connection.prepareStatement("INSERT INTO PRODUTO (nome, descricao) VALUES (?, ?)",
				Statement.RETURN_GENERATED_KEYS);) {
			// statement para retorno com generated keys com parametros (nao interferindo no
			// comando sql)

			// set nos atributos, com posição e nome da variável
			adicionarVariavel("SmartTV", "45 Polegadas", stm);
			adicionarVariavel("Rádio", "Rádio de Bateria", stm);
			connection.commit();
		} catch (Exception e) {
			e.printStackTrace();
			System.out.println("ROLLBACK EXECUTADO");
			connection.rollback();
		}
		connection.close();

	}

	private static void adicionarVariavel(String nome, String descricao, PreparedStatement stm) throws SQLException {
		stm.setString(1, nome);
		stm.setString(2, descricao);
		if (nome.equals("Rádio")) {
			throw new RuntimeException("Não foi possível adicionar o produto");
		}
		stm.execute();

		// resultado das generated kets realizadas acima
		ResultSet rst = stm.getGeneratedKeys();
		while (rst.next()) {
			Integer id = rst.getInt(1);
			System.out.println("O ID criado foi: " + id);
		}
		rst.close();
	}
}
